name: Rust

on:
  push:
    branches: [ "main" ]
    paths-ignore: ['**.md']
  pull_request:
    branches: [ "main" ]
    paths-ignore: ['**.md']

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - uses: actions/upload-artifact@v3
      with:
        name: Cargo.lock
        path: Cargo.lock

  test:
    needs: build
    strategy:
      matrix:
        type: ['--release']
        # can't run on `windows-latests`
        os: [ubuntu-latest, buildjet-4vcpu-ubuntu-2204-arm, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    # Install a specific version of Bitcoin
    - run: ./.install/bitcoin.sh
    - run: bitcoind --version
    - uses: actions/download-artifact@v3
      with:
        name: Cargo.lock
    - name: Build code
      run: cargo build --verbose --locked ${{matrix.type}}
    - name: Run tests
      run: cargo test --verbose --locked ${{matrix.type}}

  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      # Install a specific version of Bitcoin
      - run: ./.install/bitcoin.sh
      - run: bitcoind --version
      - uses: actions/download-artifact@v3
        with:
          name: Cargo.lock
      - run: cargo install cargo-tarpaulin
      # - run: cargo tarpaulin
      - run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml --avoid-cfg-tarpaulin
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run fmt check
      run: cargo fmt --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings -A clippy::op-ref -A clippy::needless-range-loop
